@page "/"
@inject HttpClient Http
@using BrowserInterop.Extensions
@using BrowserInterop.Geolocation
@using System.Text.Json
@inject IJSRuntime jsRuntime
@inject DialogService DialogService
@inject NavigationManager Navigation
@using Weather.Shared.Models.Main
@inject IWeatherService _weatherService
@inject IIconChooser _iconChooser

@if (location is not null)
{
    <div id="today">
        <div class="card">
            <div class="card-content">

                <h3>@location.DisplayName</h3>
                <p>Your cooridnates are @String.Format("{0:0.000}", @location.Latitude) @String.Format("{0:0.000}", @location.Longitude)</p>
                <div>
                    <RadzenGoogleMap Style="height: 300px" Zoom=@zoom Center=@(new GoogleMapPosition() {Lat=location.Latitude, Lng=location.Longitude}) MapClick=@OnMapClick MarkerClick="@OnMarkerClick">
                        <Markers>
                            <RadzenGoogleMapMarker Title=@location.DisplayName Position=@(new GoogleMapPosition() {Lat=location.Latitude, Lng=location.Longitude}) />
                        </Markers>
                    </RadzenGoogleMap>
                </div>

            </div>
        </div>
          

        <div></div>
        <div class="card">
            <div class="card-content">
                <p>Current Weather @_weather.CurrentWeather.temperature</p>
                <p>Wind Speed @_weather.CurrentWeather.windspeed</p>
                <p>Wind Direction @_weather.CurrentWeather.winddirection</p>
            </div>
        </div>

        <div>

        </div>
        <div class="card">
            <div class="card-content">
                @_weatherService.GetDaysInfo().Count
                <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@_weatherService.GetDaysInfo()" Title="Max Temperature (F)" CategoryProperty="time" ValueProperty="temperature_2m_max">
                        <RadzenMarkers MarkerType="MarkerType.Circle" />
                    </RadzenLineSeries>
                    <RadzenLineSeries Smooth="true" Data="@_weatherService.GetDaysInfo()" Title="Min Temperature (F)" CategoryProperty="time" ValueProperty="temperature_2m_min">
                        <RadzenMarkers MarkerType="MarkerType.Circle" />
                    </RadzenLineSeries>
                    <RadzenMarkers MarkerType="MarkerType.Square" />

                </RadzenChart>

                @(new MarkupString (_iconChooser.GetIcon(true, 5, 0, 0)))
            </div>
        </div>

        <div class="card">
            <div card-cotnent>
                <div>


                    <svg xmlns="http://www.w3.org/2000/svg" width="0" height="0">
                        <defs>
                            <radialGradient id="gradYellow" cx="50%" cy="50%" r="80%" fx="90%" fy="80%">
                                <stop offset="0%" style="stop-color:yellow; stop-opacity:1" />
                                <stop offset="100%" style="stop-color:orange ;stop-opacity:1" />
                            </radialGradient>
                            <radialGradient id="gradDarkGray" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
                                <stop offset="0%" style="stop-color:white; stop-opacity:1" />
                                <stop offset="70%" style="stop-color:gray; stop-opacity:1" />
                                <stop offset="100%" style="stop-color:dimgray ;stop-opacity:1" />
                            </radialGradient>
                            <radialGradient id="gradGray" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
                                <stop offset="0%" style="stop-color:white; stop-opacity:1" />
                                <stop offset="100%" style="stop-color:darkgray ;stop-opacity:1" />
                            </radialGradient>
                            <linearGradient id="gradWhite" x1="40%" y1="50%" x2="90%" y2="90%">
                                <stop offset="0%" style="stop-color:white;stop-opacity:1" />
                                <stop offset="100%" style="stop-color:darkgray;stop-opacity:1" />
                            </linearGradient>
                        </defs>

                        <!-- Sun -->
                        <symbol id="sun">
                            <!-- center -->
                            <circle cx="50" cy="50" r="20" fill="url(#gradYellow)" />

                            <!-- long rays -->
                            <line x1="50" y1="27" x2="50" y2="2" class="longRay" />
                            <line x1="50" y1="73" x2="50" y2="98" class="longRay" />
                            <line x1="27" y1="50" x2="2" y2="50" class="longRay" />
                            <line x1="73" y1="50" x2="98" y2="50" class="longRay" />
                            <line x1="34" y1="34" x2="16" y2="16" class="longRay" />
                            <line x1="66" y1="66" x2="84" y2="84" class="longRay" />
                            <line x1="34" y1="66" x2="16" y2="84" class="longRay" />
                            <line x1="66" y1="34" x2="84" y2="16" class="longRay" />

                            <!-- short rays -->
                            <line x1="59" y1="29" x2="66" y2="13" class="shortRay" />
                            <line x1="71" y1="42" x2="87" y2="35" class="shortRay" />
                            <line x1="71" y1="58.5" x2="87" y2="65" class="shortRay" />
                            <line x1="59" y1="71" x2="66" y2="87" class="shortRay" />
                            <line x1="41" y1="71" x2="34" y2="87" class="shortRay" />
                            <line x1="29.5" y1="58.5" x2="13" y2="66" class="shortRay" />
                            <line x1="29" y1="42" x2="13" y2="35" class="shortRay" />
                            <line x1="41" y1="29" x2="35" y2="13" class="shortRay" />
                        </symbol>

                        <!-- Moon -->
                        <symbol id="moon">
                            <path d="M60,20 A30,30 0 1,0 90,65 22,22 0 1,1 60,20z" fill="url(#gradYellow)" />
                        </symbol>

                        <!-- Star -->
                        <symbol id="star">
                            <polygon points="5,0 2,10 10,4 0,4 8,10" style="fill:url(#gradYellow);fill-rule:nonzero;" />
                        </symbol>

                        <!-- Small Gray Cloud -->
                        <symbol id="grayCloud">
                            <path d="M20,15 Q25,0 45,11 Q60,5 60,20 A30,15 5 1,1 20,15 Z" />
                        </symbol>

                        <!-- White Cloud -->
                        <symbol id="whiteCloud">
                            <path fill="url(#gradWhite)" d="M11,47 Q13,37 21,42 Q31,30 41,38 A28,21 -25 1,1 35,75 Q23,85 19,73 A12,12 0 0,1 11,47Z" />
                        </symbol>

                        <!-- Rain Drop -->
                        <symbol id="rainDrop">
                            <path fill="lightblue" d="M10 0 Q10,0 14,7 A5,5 0 1,1 6,7 Q10,0 10,0Z" />
                        </symbol>

                        <!-- Rain Drizzle -->
                        <symbol id="rainDrizzle">
                            <line x1="20" y1="2" x2="10" y2="40" />
                        </symbol>

                        <!-- Thunder Bolt -->
                        <symbol id="thunderBolt">
                            <path fill="black" d="M15,0 L1,23 L8,23 L0,40 L15,19 L8,19Z" />
                        </symbol>

                        <!-- Snow Flake -->
                        <symbol id="snowFlake">
                            <path d="M5,0 L5,10 M0,5 L10,5 M1.5,1.5 L8.5,8.5 M8.5,1.5 L1.5,8.5" />
                            <path d="M3.5,0.25 L5,2 L6.5,0.25 M3.5,9.75 L5,8 L6.5,9.75" />
                            <path d="M0.25,3.5 L2,5 L0.25,6.5 M9.75,3.5 L8,5 L9.75,6.5" />
                            <path d="M0.75,2.90 L2.85,2.85 L2.90,0.75 M7.25,9.35 L7.15,7.15 L9.35,7.25" />
                            <path d="M0.75,7.25 L2.85,7.15 L2.90,9.35 M7.15,0.75 L7.25,2.85 L9.35,2.90" />
                        </symbol>

                        <!-- Hail/Ice Pellet-->
                        <symbol id="icePellet">
                            <circle cx="4" cy="4" r="4" fill="#e3fcff" />
                        </symbol>

                        <!-- Mist -->
                        <symbol id="mist">
                            <path d="M5,34 L43,34" />
                            <path d="M10,40 L40,40 Q51.5,40 50,35 T60,30 L80,30" />
                            <path d="M15,45 L45,45 Q56.5,45 55,40 T65,35 L90,35" />
                            <path d="M60,42 L85,42" />
                        </symbol>

                    </svg>

                    <!-------------------- ICONS--------------------->
                    <!-- Dark clouds -->
                    <figure>
                        <svg class="icon" viewbox="0 0 100 100">
                            <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                            <use xlink:href="#grayCloud" x="25" y="10" class="reverse-small-cloud" fill="url(#gradDarkGray)" />
                            <use xlink:href="#whiteCloud" x="7" />
                        </svg>
                        <figcaption>Dark Clouds</figcaption>
                    </figure>

                     <!-- Few clouds -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Few Clouds</figcaption>
                </figure>

                <!-- Sunny -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" />
                </svg>
                <figcaption>Sunny</figcaption>
                </figure>

                <!-- Partly Cloudy Day -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" x="-12" y="-18" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Partly Cloudy Day</figcaption>
                </figure>

                <!-- Patchy Rain Day -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" x="-12" y="-18" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="drop1" xlink:href="#rainDrop" x="25" y="65" />
                <use id="drop3" xlink:href="#rainDrop" x="45" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Rain Day</figcaption>
                </figure>

                <!-- Patchy Drizzle Day -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" x="-12" y="-18" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="40" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Drizzle Day</figcaption>
                </figure>

                <!-- Patchy Snow Day -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" x="-12" y="-18" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="30" y="65" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="45" y="65" />
                <use id="snowFlake5" xlink:href="#snowFlake" x="58" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Snow Day</figcaption>
                </figure>

                <!-- Patchy Sleet Day -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#sun" x="-12" y="-18" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="35" y="65" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="50" y="65" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="40" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Sleet Day</figcaption>
                </figure>

                <!-- Moon -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-15" />
                <use xlink:href="#star" x="42" y="30" class="stars animated infinite flash" />
                <use xlink:href="#star" x="61" y="32" class="stars animated infinite flash delay-1s" />
                <use xlink:href="#star" x="55" y="50" class="stars animated infinite flash delay-2s" />
                </svg>
                <figcaption>Clear Night</figcaption>
                </figure>

                <!-- Partly Cloudy Night -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-20" y="-15" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Partly Cloudy Night</figcaption>
                </figure>

                <!-- Patchy Rain Night -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-20" y="-15" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="drop1" xlink:href="#rainDrop" x="25" y="65" />
                <use id="drop3" xlink:href="#rainDrop" x="45" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Rain Night</figcaption>
                </figure>

                <!-- Patchy Drizzle Night -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-20" y="-15" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="40" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Drizzle Night</figcaption>
                </figure>

                <!-- Patchy Snow Night -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-20" y="-15" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="30" y="65" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="45" y="65" />
                <use id="snowFlake5" xlink:href="#snowFlake" x="58" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Snow Night</figcaption>
                </figure>

                <!-- Patchy Sleet Night -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#moon" x="-20" y="-15" />
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="35" y="65" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="50" y="65" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="40" y="65" />
                <use xlink:href="#whiteCloud" x="7" />
                </svg>
                <figcaption>Patchy Sleet Night</figcaption>
                </figure>

                <!-- Rain -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" x="25" y="10" class="reverse-small-cloud" fill="url(#gradDarkGray)" />
                <use id="drop4" xlink:href="#rainDrop" x="15" y="65" />
                <use id="drop1" xlink:href="#rainDrop" x="25" y="65" />
                <use id="drop2" xlink:href="#rainDrop" x="37" y="65" />
                <use id="drop3" xlink:href="#rainDrop" x="50" y="65" />
                <use xlink:href="#whiteCloud" x="5" y="-7" />
                </svg>
                <figcaption>Rain</figcaption>
                </figure>

                <!-- Drizzle -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#rainDrizzle" x="15" y="65" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="35" y="65" />
                <use xlink:href="#rainDrizzle" x="45" y="65" />
                <use xlink:href="#whiteCloud" x="10" y="-10" />
                </svg>
                <figcaption>Drizzle</figcaption>
                </figure>

                <!-- Thunderstorm -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradGray)" />
                <use xlink:href="#grayCloud" x="25" y="10" class="reverse-small-cloud" fill="url(#gradDarkGray)" />
                <use xlink:href="#thunderBolt" x="30" y="61" class="lighting animated infinite flash" />
                <use xlink:href="#whiteCloud" x="7" />
                <use xlink:href="#thunderBolt" x="45" y="56" class="lighting animated infinite flash delay-1s" />
                </svg>
                <figcaption>Thunderstorm</figcaption>
                </figure>

                <!-- Snow -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use id="snowFlake1" xlink:href="#snowFlake" x="20" y="55" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="35" y="65" />
                <use id="snowFlake3" xlink:href="#snowFlake" x="45" y="60" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="50" y="65" />
                <use id="snowFlake5" xlink:href="#snowFlake" x="63" y="65" />
                <use xlink:href="#whiteCloud" x="10" y="-15" />
                </svg>
                <figcaption>Snow</figcaption>
                </figure>

                <!-- Sleet -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" x="25" y="10" class="reverse-small-cloud" fill="url(#gradDarkGray)" />
                <use id="snowFlake1" xlink:href="#snowFlake" x="20" y="55" />
                <use id="snowFlake2" xlink:href="#snowFlake" x="35" y="65" />
                <use id="snowFlake3" xlink:href="#snowFlake" x="45" y="60" />
                <use id="snowFlake4" xlink:href="#snowFlake" x="50" y="65" />
                <use id="snowFlake5" xlink:href="#snowFlake" x="63" y="65" />
                <use xlink:href="#rainDrizzle" x="15" y="65" />
                <use xlink:href="#rainDrizzle" x="25" y="65" />
                <use xlink:href="#rainDrizzle" x="35" y="65" />
                <use xlink:href="#rainDrizzle" x="45" y="65" />
                <use xlink:href="#whiteCloud" x="5" y="-7" />
                </svg>
                <figcaption>Sleet</figcaption>
                </figure>

                <!-- Hail/Ice Pellets -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" x="25" y="10" class="reverse-small-cloud" fill="url(#gradDarkGray)" />
                <use id="ice4" xlink:href="#icePellet" x="25" y="65" />
                <use id="ice1" xlink:href="#icePellet" x="35" y="65" />
                <use id="ice2" xlink:href="#icePellet" x="47" y="65" />
                <use id="ice3" xlink:href="#icePellet" x="60" y="65" />
                <use xlink:href="#whiteCloud" x="5" y="-7" />
                </svg>
                <figcaption>Hail/Ice Pellets</figcaption>
                </figure>

                <!-- Mist Cloud -->
                <figure>
                <svg class="icon" viewbox="0 0 100 100">
                <use xlink:href="#grayCloud" class="small-cloud" fill="url(#gradDarkGray)" x="0" y="20" />
                <use xlink:href="#grayCloud" x="30" y="30" class="reverse-small-cloud" fill="url(#gradGray)" />
                <use id="mist" xlink:href="#mist" x="0" y="30" />
                </svg>
                <figcaption>Mist/Fog</figcaption>
                </figure>

                </div>
            </div>
        </div>


    </div>
}


@code {
    private WindowNavigatorGeolocation geolocationWrapper;
    private GeolocationPosition currentPosition;
    private Location? location;
    private Weather? _weather;
    int orderID = 10248;
    int zoom = 3;
    bool smooth = false;
    bool showDataLabels = false;

    protected override async Task OnInitializedAsync()
    {
        var window = await jsRuntime.Window();
        var navigator = await window.Navigator();
        geolocationWrapper = navigator.Geolocation;

        if (_weatherService.GetWeather() is null)
        {
            location = new Location();
            await GetGeolocation();
            double latitude = currentPosition.Coords.Latitude;
            double longitude = currentPosition.Coords.Longitude;
            await GetAddreess(latitude, longitude);
            _weatherService.SertDependencies(Http, Navigation);
            _weatherService.SetLocation(location);
            await _weatherService.SetWeather();
            _weather = _weatherService.GetWeather();
        }

        else
        {
            location = _weatherService.GetLocation();
            _weather=_weatherService.GetWeather();
        }

    }

    public async Task GetGeolocation()
    {

        currentPosition = (await geolocationWrapper.GetCurrentPosition(new PositionOptions()
            {
                EnableHighAccuracy = true,
                MaximumAgeTimeSpan = TimeSpan.Zero,
                TimeoutTimeSpan = TimeSpan.MaxValue,
            })).Location;
    }

    private async Task GetAddreess(double latitude, double longitude)
    {
        string apiUrl = string.Format("https://geocode.maps.co/reverse?lat={0}&lon={1}", latitude, longitude);

        HttpResponseMessage response = await Http.GetAsync(apiUrl);
        Console.WriteLine(apiUrl);
        if (response.IsSuccessStatusCode)
        {
            string responseContent = await response.Content.ReadAsStringAsync();

            // Parse the JSON response
            var jsonObject = JsonDocument.Parse(responseContent);
            Console.WriteLine(jsonObject);
            // Get the latest values for each parameter for Tucson
            try
            {
                string? displayName = jsonObject.RootElement.GetProperty("display_name").GetString();


                location.DisplayName = displayName;
                location.Longitude = longitude;
                location.Latitude = latitude;
            }

            catch (Exception ex)
            {
                Console.WriteLine("Somethign has gone wrong.");
            }

        }

        else
        {
            throw new Exception($"Error retrieving weather data: {response.ReasonPhrase}");
        }
    }

    private async Task SetUpLocation(GoogleMapClickEventArgs args)
    {

    }

    private async Task GetTimeZone()
    {
        string api = Navigation.BaseUri + "api/timezone";
        try
        {
            var response = await Http.PostAsJsonAsync(api, location);

        }

        catch (Exception ex)
        {
            Console.WriteLine("Something went wrong.");
        }
    }

    async void OnMapClick(GoogleMapClickEventArgs args)
    {
        location.Latitude = args.Position.Lat;
        location.Longitude = args.Position.Lng;
        await GetAddreess(location.Latitude, location.Longitude);
        _weatherService.SetLocation(location);
        await _weatherService.SetWeather();
        _weather = _weatherService.GetWeather();
        StateHasChanged();
    }

    void OnMarkerClick(RadzenGoogleMapMarker marker)
    {

    }
}
